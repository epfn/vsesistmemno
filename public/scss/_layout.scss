$color-text-black: #273137;
$color-text-gray: #8596a0;
$color-text-blue: #5c7ef4;
$color-text-green: #5eb728;
$color-text-red: #f43e36;
$color-text-orange: #f38928;
$color-text-peach: #f78763;

$color-background-black: #2c2d2f;
$color-background-gray: #e9eff2;
$color-background-gray-light: #fafbfc;
$color-background-blue: #5c7ef4;
$color-background-blue-light: #ebefff;
$color-background-blue-light-2: #f5f9ff;
$color-background-blue-dark: #4b6ad2;
$color-background-purple: #dbe1f4;
$color-background-purple-light: #f1f4f9;
$color-background-green: #dbf3cc;
$color-background-red: #ffd8d7;
$color-background-orange: #ffe4cc;
$color-background-peach: #f78763;
$color-background-peach-light: #ffefea;
$color-background-peach-dark: #eb6f47;

$color-border-gray: #e9eff2;
$color-border-peach: #f78763;
$color-border-blue: #5c7ef4;

@font-face {
  font-family: "Onest";
  src: url("../fonts/onest/onest-variable.ttf") format("truetype-variations");
}

html {
  height: 100%;
  scroll-behavior: smooth;
  scroll-padding-top: 90px;
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  font-family: "Onest", sans-serif;
  color: $color-text-black;
  background-color: $color-background-purple-light;
}

.tox-tinymce {
  border: 1px solid $color-border-gray !important;
  border-radius: 8px !important;
}

.tox:not(.tox-tinymce-inline) .tox-editor-header {
  box-shadow: unset !important;
  border-bottom: 1px solid $color-border-gray !important;
}

.tox .tox-edit-area::before {
  border: 1px solid $color-border-blue !important;
  border-radius: unset !important;
  border-bottom-left-radius: 8px !important;
  border-bottom-right-radius: 8px !important;
}
.tox .tox-statusbar {
  border-top: unset !important;
  height: 16px !important;
  margin-top: -16px;
}

.tox .tox-statusbar__resize-handle {
  margin-left: auto !important;
}

.tox .tox-edit-area__iframe {
  height: calc(100% - 1rem) !important;
}

.tox .tox-edit-area__iframe {
  html {
    scrollbar-width: thin;
  }
}

@media (max-width: 992px) {
  html {
    scroll-padding-top: 60px;
  }
  .body-overflow {
    max-height: 100vh;
    overflow-y: clip;
  }
}

@function round($number, $decimals: 0) {
  $n: 1;
  @if $decimals > 0 {
    @for $i from 1 through $decimals {
      $n: $n * 10;
    }
  }
  @return math.div(math.round($number * $n), $n);
}

@function px-to-rem($px) {
  $rems: math.div($px, 16px) * 1rem;
  @return $rems;
}

@function fluid(
  $min-size,
  $max-size,
  $min-breakpoint: 1024px,
  $max-breakpoint: 1350px,
  $unit: vw
) {
  $slope: math.div($max-size - $min-size, $max-breakpoint - $min-breakpoint);
  $slope-to-unit: round($slope * 100, 3);
  $intercept-rem: round(px-to-rem($min-size - $slope * $min-breakpoint), 3);
  $min-size-rem: round(px-to-rem($min-size), 3);
  $max-size-rem: round(px-to-rem($max-size), 3);

  @return clamp(
    #{$min-size-rem},
    #{$slope-to-unit}#{$unit} + #{$intercept-rem},
    #{$max-size-rem}
  );
}
